#!/bin/bash


function print_signal_bar {
    a=$(echo "$1" | cut -f1 -d "/")
    b=$(echo "$1" | cut -f2 -d "/")
    s=$(((a*100/b)/25+1)); [ $a -eq 0 ] && s=0

    case $s in
    0) echo "____" ;;
    1) echo "▂___" ;;
    2) echo "▂▄__" ;;
    3) echo "▂▄▆_" ;;
    [4-9]) echo "▂▄▆█" ;;
    esac
}


function scan {
    iface="$(iw dev | awk '$1=="Interface"{print $2}' | head -1)"
    [ ! "$(ip link show $iface up)" ] && sudo ip link set dev $iface up
	
    echo -e "\e[1mScaning interface $iface...\e[0m"
    scan="$(iwlist "$iface" scan | egrep "Address|ESSID|Quality|Channel|Encryption key")"
    
    IFS=$'\n'
    addresses=($(echo "$scan" | grep Address: | egrep -o "([0-9A-F]{2}:)+[0-9A-F]{2}"))
    channels=($(echo "$scan" | grep Channel: | cut -f2 -d:))
    qualities=($(echo "$scan" | grep Quality | egrep -o "[0-9]+/[0-9]+"))
    keys=($(echo "$scan" | grep "Encryption key" | cut -f 2 -d:))
    essids=($(echo "$scan" | grep ESSID | cut -f2 -d: | cut -f2 -d\"))
}

function list {
    (
	# Get current connected SSID
	ssid_current="$(iwgetid $iface | cut -f2 -d: | cut -f2 -d\")"
	
    echo -e "\e[1mNUM␟SIGNAL␟SSID␟CHANNEL␟ENCRYPT\e[0m"
    for n in $(seq 0 $((${#addresses[*]}-1))); do
		addr="${addresses[$n]}"
        ssid="${essids[$n]}"
		[ ! "$ssid" ] && ssid="$addr"
        channel="${channels[$n]}"
        quality="${qualities[$n]}"
        quality="$(print_signal_bar $quality)"
        key="${keys[$n]}"
    
		[ "$ssid" = "$ssid_current" ] && echo -en "\e[32m\e[1m"
        echo -e "[$((n+1))]␟$quality␟$ssid␟$channel␟$key"
		[ "$ssid" = "$ssid_current" ] && echo -en "\e[0m"
    
    done
    ) | column -t -s "␟"
}

function disconnect {
	local iface="$1"
	local ssid_current="$(iwgetid $iface | cut -f2 -d: | cut -f2 -d\")"
	echo -e "\n\e[1mDisconnecting from $ssid_current\e[0m"
	killall wpa_supplicant
	dhclient -v -r "$iface"
	ip link set dev $iface down	
}

function connect {
	local ssid="$1"
	local ssid_current="$(iwgetid $iface | cut -f2 -d: | cut -f2 -d\")"
	local iface="$2"
	local pass
	
	if [ "$ssid_current" ]; then
		disconnect "$iface"
		[ "$ssid_current" = "$ssid" ] && exit
	fi
	
	# Read pass
	echo -en "\e[1m$ssid\e[0m password: "
	read pass
	
	echo -e "\n\e[1mConnecting to $ssid_current\e[0m"
	[ "$ssid_current" ] && dhclient -v -r "$iface"
	echo
	wpa_supplicant -B -i "$iface" -c <(wpa_passphrase "$ssid" "$pass")
	
	echo -e "\n\e[1mGetting DHCP address\e[0m"
	dhclient -v $iface
}



function main {
	# Select network
    unset n
    while [ ! "$n" ]; do
        clear
        scan
        [ ${#addresses[*]} -eq 0 ] && { sleep 1; continue; }
        list
        echo
		while ! ([ "$n" -le ${#addresses[*]} ]&>/dev/null && [ "$n" -ge 1 ]&>/dev/null); do
        	read -p "Select connection: " n
			[ ! "$n" ] && break
		done
    done
	
	connect "${essids[$((n-1))]}" "$iface"
}



main

